/***********************************************Copyright (c)********************************************* 
**                                
**                                      
**                                       
** 
**--------------File Info--------------------------------------------------------------------------------- 
** File name:               DeviceConfig.h 
** Last modified Date:      2012-12-31 
** Last Version:            1.0 
** Descriptions:            设备关键字定义头文件，该文件定义的很多枚举，被程序用来识别是哪个参数或部件 
** 
**-------------------------------------------------------------------------------------------------------- 
** Created by:               
** Created date:            2012-12-31 
** Version:                 1.0 
** Descriptions:             
** 
**-------------------------------------------------------------------------------------------------------- 
** Modified by:              
** Modified Date:            
** Version:                  
** Descriptions:             
** 
*********************************************************************************************************/ 
#ifndef __DEVICECONFIG_H 
#define __DEVICECONFIG_H 
#include    "..\..\Head\system.h"   

/********************************************************************************************************* 
  外设的总数 
*********************************************************************************************************/ 
#define MAX_DEVICE_NUM          15 

/********************************************************************************************************* 
  每种外设的个数 
*********************************************************************************************************/
#define __ADC_MAX_NUM           1                                       /*  LPC22xx 最多ADC个数总共有1个*/ 
#define __CAN_MAX_NUM           4


#define __UART_MAX_NUM          6                                       /*  uart 最多个数总共有6个      */ 
#define __UART_SOC_NUM          2                                       /*  片上uart 最多个数总共有2个  */ 
#define __POWER_MAX_NUM         1                                       /*  power 最多个数总共有1个     */ 
#define __PLL_MAX_NUM           1                                       /*  pll 最多个数总共有1个       */ 
#define __RTC_MAX_NUM           1                                       /*  rtc 最多个数总共有1个       */ 
#define __TIMER_MAX_NUM         2                                       /*  timer 最多个数总共有2个     */ 
#define __EMC_MAX_NUM           4                                       /*  emc 最多4个                 */ 
#define __EINT_MAX_NUM          4                                       /*  eint 最多4个                */
#define __PWM_MAX_NUM           1                                       /*  pwm 最多个数总共有1个       */ 
#define __I2C_MAX_NUM           1                                       /*  i2c 最多个数总共有1个       */
#define __SPI_MAX_NUM           2                                       /*  spi 最多个数总共有1个       */
#define __WDT_MAX_NUM           1                                       /*  wdt 最多个数总共有1个       */

/********************************************************************************************************* 
  每个外设参数的个数 
*********************************************************************************************************/

#define ADC_STR_MAX_NUM         7
#define CAN_MAX_STR_NUM         5 
#define UART_STR_MAX_NUM        17                                      /*  uart                        */
#define POWER_STR_MAX_NUM       2                                       /*  power                       */
#define PLL_STR_MAX_NUM         3                                       /*  pll                         */
#define RTC_STR_MAX_NUM         8                                       /*  rtc                         */
#define TIMER_STR_MAX_NUM       7                                       /*  timer                       */
#define EMC_STR_MAX_NUM         4                                       /*  emc                         */
#define EINT_STR_MAX_NUM        3                                       /*  eint                        */
#define PWM_STR_MAX_NUM         8                                       /*  pwm                         */
#define I2C_STR_MAX_NUM         5                                       /*  i2c                         */
#define SPI_STR_MAX_NUM         10                                      /*  spi                         */
#define MAX_WDT_STR_NUM         3                                       /*  wdt                         */

/********************************************************************************************************* 
  参数数组的标准输入 
  请在DeviceConfig.c文件中添加设备参数内容 
*********************************************************************************************************/ 
extern const char Cmd_Tab[MAX_DEVICE_NUM][18][18];  
 
/********************************************************************************************************* 
  参数数组的参数个数，在更新参数数组内容时需要更新该表，否则参数检查可能出错 
*********************************************************************************************************/ 
extern const unsigned char GucCmdTabNum[MAX_DEVICE_NUM]; 
 
/********************************************************************************************************* 
  枚举:外设设备的排列序号  
*********************************************************************************************************/ 
typedef enum {  Tab_UART,       Tab_I2C,        Tab_TIMER,      Tab_SPI,        Tab_EINT,
                Tab_PWM,        Tab_ADC,        Tab_WDT,        Tab_PWR,        Tab_EMC,    
                Tab_RTC,        Tab_PLL,        Tab_CAN } Tab;   
 
/********************************************************************************************************* 
  枚举:串口参数的顺序  
*********************************************************************************************************/ 
typedef enum {  uartBaudRate,   uartRxBufSize,  uartTxBufSize,  uartBaseAddr,   uartOffset, 
                uartFifoLen,    uartFpclk,      uartDataBits,   uartStopBits,   uartParity, 
                uartTimeOut,    uartFlowType,   uartXON,        uartXOFF,       uartRs485Dir,
                uartSpringCh,   uartSpringPoint } Uart_Cmd;

/********************************************************************************************************* 
  枚举：i2c参数顺序  
*********************************************************************************************************/ 
typedef enum{   i2cMode,        i2cSpeed,       i2cSalAddr,     i2cSubAddrType, i2cFpclk
            } I2C_Cmd; 
                 
/********************************************************************************************************* 
  枚举：RTC参数顺序  
*********************************************************************************************************/ 
typedef enum {  rtcYear,        rtcMonth,       rtcWeek,        rtcDay,         rtcHour,
                rtcMin,         rtcSec,         rtcFpclk } RTC_Cmd; 
 
/********************************************************************************************************* 
  枚举：WDT参数顺序  
*********************************************************************************************************/ 
typedef enum {  wdtTimeOut,     wdtRstEn,       wdtFpclk } WDT_Cmd; 

/********************************************************************************************************* 
  枚举：PWR参数顺序  
*********************************************************************************************************/ 
typedef enum {  pwrMode,        pwrDevSel} PWR_Cmd; 
 
/********************************************************************************************************* 
  枚举：定时器定时参数顺序  
*********************************************************************************************************/ 
typedef enum{   tmrMode,        tmrCapChn,      tmrChnl,        tmrTime,        tmrActCtrl,
                tmrOutCtrl,     tmrFpclk } TIMER_Cmd; 
 
/********************************************************************************************************* 
  枚举:spi参数的顺序  
*********************************************************************************************************/ 
typedef enum {  spiMode,        spiSpeed,       spiCpha,        spiCpol,        spiLsbf,        
                spiCsPin,       spiRWMode,      spiFpclk,       spiRxBufSize,   spiTxBufSize } SPI_Cmd; 
 

/********************************************************************************************************* 
  枚举:ADC参数的顺序  
*********************************************************************************************************/ 
//typedef enum{Chn, ADCClk, Burst, Precision, PowerDown, Start, Edge}ADC_Cmd; 
typedef enum {  adcMode,        adcChn,         adcPreci,       adcActCtrl,
                adcSpeed,       adcPdn,         adcFpclk } ADC_Cmd; 
/********************************************************************************************************* 
  枚举:PWM参数顺序  
*********************************************************************************************************/ 
typedef enum {  pwmMode,        pwmCAPChn,      pwmChnl,         pwmTime,       pwmActCtrl,  
                pwmEdge,        pwmOutCtrl,     pwmFpclk } PWM_Cmd; 
/********************************************************************************************************* 
  枚举:EINT参数的顺序  
*********************************************************************************************************/ 
typedef enum {  eintMode,       eintWake } EINT_Cmd; 
 
/********************************************************************************************************* 
  枚举:EMC参数顺序  
*********************************************************************************************************/ 
typedef enum {  emcBusWidth,    emcReadDly,     emcWriteDly,    emcIdcy } EMC_Cmd;  

/********************************************************************************************************* 
  枚举：PLL参数顺序  
*********************************************************************************************************/ 
typedef enum {  pllFosc,        pllCclkRatio,   pllPclkRatio } PLL_Cmd;

/********************************************************************************************************* 
  枚举:CAN参数顺序  
*********************************************************************************************************/ 
typedef enum {  canBaudRate,    canRxBufSize,   canMode,        canAfMode,      canFpclk } CAN_Cmd;   
 
#endif                                                                  /* __DEVICECONFIG_H             */ 
/********************************************************************************************************* 
   END FILE 
*********************************************************************************************************/ 



