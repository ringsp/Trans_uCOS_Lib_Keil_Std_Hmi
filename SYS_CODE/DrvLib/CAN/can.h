/****************************************Copyright (c)****************************************************
**                              
**
**--------------File Info---------------------------------------------------------------------------------
** File name:           can.h
** Last modified Date:  2013-08-22
** Last Version:        1.0
** Descriptions:        LPC2200 CAN-Bus驱动封装头文件
**--------------------------------------------------------------------------------------------------------
** Created by:          
** Created date:        2013-08-22
** Version:             1.0
** Descriptions:        The original version
**--------------------------------------------------------------------------------------------------------
** Modified by:
** Modified date:
** Version:
** Descriptions:
*********************************************************************************************************/

#ifndef __CAN_H
#define __CAN_H

#ifdef __cplusplus
extern "C" {
#endif                                                                  /*  __cplusplus                 */

/*********************************************************************************************************
  CAN 标示
*********************************************************************************************************/
#define CAN1                0                                           /*  define CAN chanel 1         */
#define CAN2                1                                           /*  define CAN chanel 2         */
#define CAN3                2                                           /*  define CAN chanel 3         */
#define CAN4                3                                           /*  define CAN chanel 4         */

/*********************************************************************************************************
  CAN模式操作命令参数
*********************************************************************************************************/
#define SET_BAUDRATE        0                                           /*  设置CAN波特率               */
#define SET_CTRLMODE        1                                           /*  设置CAN模式:正常,只听,自测试*/
#define SET_AFMODE          2                                           /*  设置CAN验收滤波             */

/*********************************************************************************************************
  CAN发送模式定义
*********************************************************************************************************/
#define CANTxCMD_NOR        0x00                                        /*  正常发送                    */
#define CANTxCMD_SIG        0x01                                        /*  单次发送                    */
#define CANTxCMD_SEL        0x02                                        /*  自发自收                    */
#define CANTxCMD_SIGSEL     0x03                                        /*  单次自发自收                */

/*********************************************************************************************************
    帧信息结构体定义
*********************************************************************************************************/
struct can_frame
{
    BOOLEAN ucIsRemote;                                                 /*  是否远程帧标志              */
    BOOLEAN ucIsExtend;                                                 /*  是否扩展帧标志              */
    INT8U   ucDataLen;                                                  /*  数据长度                    */
    INT32U  ulId;                                                       /*  帧ID                        */
    INT8U   ucBuf[8];                                                   /*  帧数据                      */
};
typedef struct can_frame CANFRAME;

/*********************************************************************************************************
  用户可调用的钩子函数
*********************************************************************************************************/
struct canHooks {
    void        (*pReceive)(void *pRsv,CANFRAME ucfRbr);                /*  接收到CAN帧调用的函数       */
                                                                        /*  pRsv:   保留,用户不要操作   */
                                                                        /*  ucfRbr: 接收到的CAN帧       */
};
typedef struct canHooks     CAN_HOOKS;
typedef struct canHooks*    PCAN_HOOKS;

/*********************************************************************************************************
    CAN验收滤波相关定义
*********************************************************************************************************/
typedef unsigned long long ulint64;                                     /*  无符号64位长整形数          */
typedef unsigned long      ulint32;                                     /*  无符号32位长整形数          */

                                                                       /*  扩展帧验收过滤范围表格数据  */
                                                                        /*  64位宽                      */
#ifndef __CAN_C

/*********************************************************************************************************
** Function name:           canInit
** Descriptions:            CAN 初始化
** input parameters:        ulId    : 子设备号
**                          pucArg  :字符串指针
**                          pvRsv   :保留参数
** ouput parameters:        none
** Returned value:          操作成功:OPERATE_SUCCESS;
**                          操作失败:-OPERATE_FAIL
*********************************************************************************************************/
extern INT32S canInit (INT32U ulId, char *pucArg, void *pvRsv);

/*********************************************************************************************************
** Function name:           canSetMode 
** Descriptions:            CAN 模式设置
** input parameters:        ulId    : 子设备号
**                          ulCmd   : 命令参数
**                          pucArg  : 配置参数字符窜指针
** output parameters:       None
** Returned value:          操作成功:OPERATE_SUCCESS;
**                          操作失败:-OPERATE_FAIL
*********************************************************************************************************/
extern INT32S canSetMode (INT32U ulId, INT32U ulCmd, char *pucArg);

/*********************************************************************************************************  
** Function name:           canRead  
** Descriptions:            读取can接口接收缓存
** input parameters:        uiId            can器件号
**                          pcf             帧存放起始地址
**                          uiSize          发送帧数  
** Output parameters:       none        
** Returned value:          实际读取帧数 
** Example:                 canRead(CAN1, &cf, 1)  
**                            
*********************************************************************************************************/
extern INT32S canRead (INT32U ulId, CANFRAME *pcfBuf, INT32U ulSize);

/*********************************************************************************************************  
** Function name:           canWrite  
** Descriptions:            can接口发送数据
** input parameters:        uiId            can器件号  
**                          pcf             帧起始地址
**                          uiSize          发送帧数  
** Output parameters:       none        
** Returned value:          实际发送帧数 
** Example:                 canWrite(CAN1, &cf, 1)  
**                            
*********************************************************************************************************/
extern INT32S canWrite (INT32U ulId, CANFRAME *pcfBuf, INT32U ulSize);

/*********************************************************************************************************
** Function name:           canIsr
** Descriptions:            CAN 中断服务
** input parameters:        none
** ouput parameters:        none
** Returned value:          none
*********************************************************************************************************/
extern void canIsr(void);


#endif                                                                  /*  __CAN_C                     */

#ifdef __cplusplus
    }
#endif                                                                  /*  __cplusplus                 */
#endif                                                                  /*  __CAN_H                     */

/*********************************************************************************************************
  END FILE
*********************************************************************************************************/
